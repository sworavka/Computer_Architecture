$date
	Thu Nov  7 17:30:12 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module SignExtenderTest $end
$var wire 64 ! BusImm [63:0] $end
$var reg 2 " Ctrl [1:0] $end
$var reg 26 # Imm16 [25:0] $end
$var reg 8 $ passed [7:0] $end
$scope module uut $end
$var wire 2 % Ctrl [1:0] $end
$var wire 26 & Imm16 [25:0] $end
$var reg 64 ' BusImm [63:0] $end
$upscope $end
$scope task allPassed $end
$var reg 8 ( numTests [7:0] $end
$var reg 8 ) passed [7:0] $end
$upscope $end
$scope task passTest $end
$var reg 65 * actualOut [64:0] $end
$var reg 65 + expectedOut [64:0] $end
$var reg 8 , passed [7:0] $end
$var reg 2 - testType [1:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx -
bx ,
bx +
bx *
bx )
bx (
b10101000101 '
b1010100101001010101000101 &
b0 %
b0 $
b1010100101001010101000101 #
b0 "
b10101000101 !
$end
#40000
b1111111111111111111111111111111111111111111111111111101010101000 !
b1111111111111111111111111111111111111111111111111111101010101000 '
b1001001010010101010101000 #
b1001001010010101010101000 &
b1 $
b1 ,
b1 -
b10101000101 +
b10101000101 *
#80000
b1001001000 !
b1001001000 '
b11110000011001001001001000 #
b11110000011001001001001000 &
b10 $
b10 ,
b1111111111111111111111111111111111111111111111111111101010101000 +
b1111111111111111111111111111111111111111111111111111101010101000 *
#120000
b1111111111111111111111111111111111111111111111111111101010101010 !
b1111111111111111111111111111111111111111111111111111101010101010 '
b1011101001010101010101010 #
b1011101001010101010101010 &
b11 $
b11 ,
b1001001000 +
b1001001000 *
#160000
b1001001001 !
b1001001001 '
b1010101110001001001001001 #
b1010101110001001001001001 &
b100 $
b100 ,
b1111111111111111111111111111111111111111111111111111101010101010 +
b1111111111111111111111111111111111111111111111111111101010101010 *
#200000
b1111111111111111111111111111111111111111111111111111111101010101 !
b1111111111111111111111111111111111111111111111111111111101010101 '
b1010101010101010010101101 #
b1010101010101010010101101 &
b1 "
b1 %
b101 $
b101 ,
b1001001001 +
b1001001001 *
#240000
b1110000 !
b1110000 '
b1110001110000100010010001 #
b1110001110000100010010001 &
b110 $
b110 ,
b1111111111111111111111111111111111111111111111111111111101010101 +
b1111111111111111111111111111111111111111111111111111111101010101 *
#280000
b1111111111111111111111111111111111111111111111111111111101011111 !
b1111111111111111111111111111111111111111111111111111111101011111 '
b1010101011111001001000100 #
b1010101011111001001000100 &
b111 $
b111 ,
b1110000 +
b1110000 *
#320000
b10010101 !
b10010101 '
b10010010010101001001010010 #
b10010010010101001001010010 &
b1000 $
b1000 ,
b1111111111111111111111111111111111111111111111111111111101011111 +
b1111111111111111111111111111111111111111111111111111111101011111 *
#360000
b10010010 !
b10010010 '
b10010010010010101010011010 #
b10010010010010101010011010 &
b1001 $
b1001 ,
b10010101 +
b10010101 *
#400000
b1011010010010010010010010 !
b1011010010010010010010010 '
b1011010010010010010010010 #
b1011010010010010010010010 &
b10 "
b10 %
b1010 $
b1010 ,
b10010010 +
b10010010 *
#440000
b100100101001010101111111 !
b100100101001010101111111 '
b100100101001010101111111 #
b100100101001010101111111 &
b1011 $
b1011 ,
b1011010010010010010010010 +
b1011010010010010010010010 *
#480000
b100000000000000000000 !
b100000000000000000000 '
b100000000000000000000 #
b100000000000000000000 &
b1100 $
b1100 ,
b100100101001010101111111 +
b100100101001010101111111 *
#520000
b1111111111111111111111111111111111111111111111111110111111111110 !
b1111111111111111111111111111111111111111111111111110111111111110 '
b11111111111110111111111110 #
b11111111111110111111111110 &
b1101 $
b1101 ,
b100000000000000000000 +
b100000000000000000000 *
#560000
b1001010101001010101010101 !
b1001010101001010101010101 '
b1001010101001010101010101 #
b1001010101001010101010101 &
b1110 $
b1110 ,
b1111111111111111111111111111111111111111111111111110111111111110 +
b1111111111111111111111111111111111111111111111111110111111111110 *
#600000
b1111111111100 !
b1111111111100 '
b111111111110000000 #
b111111111110000000 &
b11 "
b11 %
b1111 $
b1111 ,
b1001010101001010101010101 +
b1001010101001010101010101 *
#640000
b1111111111111111111111111111111111111111111111010100100101010100 !
b1111111111111111111111111111111111111111111111010100100101010100 '
b10101010010010101010010101 #
b10101010010010101010010101 &
b10000 $
b10000 ,
b1111111111100 +
b1111111111100 *
#680000
b101010101010101010 !
b101010101010101010 '
b10010101010101010101001001 #
b10010101010101010101001001 &
b10001 $
b10001 ,
b1111111111111111111111111111111111111111111111010100100101010100 +
b1111111111111111111111111111111111111111111111010100100101010100 *
#720000
b100101001010100101 !
b100101001010100101 '
b1010010100101010010101001 #
b1010010100101010010101001 &
b10010 $
b10010 ,
b101010101010101010 +
b101010101010101010 *
#760000
b111110101100 !
b111110101100 '
b11111010110010001 #
b11111010110010001 &
b10011 $
b10011 ,
b100101001010100101 +
b100101001010100101 *
#800000
b10100 $
b10100 ,
b111110101100 +
b111110101100 *
#810000
b10100 (
b10100 )
